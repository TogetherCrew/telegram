version: '3.9'

services:
  mongodb:
    container_name: mongodb
    image: mongo:7.0.5
    restart: unless-stopped
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=pass
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 1m30s
      timeout: 10s
      retries: 2
      start_period: 30s

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.12.12-management
    restart: unless-stopped
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 1m30s
      timeout: 10s
      retries: 2
      start_period: 30s

  neo4j:
    container_name: neo4j
    image: neo4j:5.9.0
    restart: unless-stopped
    ports:
      - 7474:7474
      - 7687:7687
    volumes:
      - neo4j_data:/data
      - neo4j_import:/import
      - neo4j_plugins:/plugins
    environment:
      - NEO4J_PLUGINS=["apoc", "graph-data-science"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,gds.*
      - NEO4J_AUTH=neo4j/password

  # bot:
  #   container_name: bot
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #     target: development
  #   command: npm run start:dev bot
  #   restart: unless-stopped
  #   env_file:
  #     - .env
  #   volumes:
  #     - .:/usr/src/app
  #     - ./node_modules:/usr/src/app/node_modules
  #   depends_on:
  #     rabbitmq: 
  #       condition: service_healthy

  # event-store:
  #   container_name: event-store
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #     target: development
  #   command: npm run start:dev event-store
  #   restart: unless-stopped
  #   env_file:
  #     - .env
  #   volumes:
  #     - .:/usr/src/app
  #     - ./node_modules:/usr/src/app/node_modules
  #   depends_on:
  #     mongodb: 
  #       condition: service_healthy
  #     rabbitmq: 
  #       condition: service_healthy

volumes:
  mongo_data:
  neo4j_data:
  neo4j_import:
  neo4j_plugins: